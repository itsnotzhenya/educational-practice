// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webApi;

namespace htdocs.Migrations
{
    [DbContext(typeof(FilmContext))]
    [Migration("20190411072212_films")]
    partial class films
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("webApi.Model.Awards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Bafta");

                    b.Property<int>("FilmId");

                    b.Property<bool>("GoldenGlob");

                    b.Property<bool>("Oscar");

                    b.HasKey("Id");

                    b.HasIndex("FilmId")
                        .IsUnique();

                    b.ToTable("Awards");
                });

            modelBuilder.Entity("webApi.Model.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<int>("Genre");

                    b.Property<string>("Name");

                    b.Property<string>("Prod");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("webApi.Model.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FilmId");

                    b.Property<string>("Name");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("FilmId")
                        .IsUnique();

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("webApi.Model.Awards", b =>
                {
                    b.HasOne("webApi.Model.Film", "Film")
                        .WithOne("Awards")
                        .HasForeignKey("webApi.Model.Awards", "FilmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("webApi.Model.Studio", b =>
                {
                    b.HasOne("webApi.Model.Film", "Film")
                        .WithOne("Studio")
                        .HasForeignKey("webApi.Model.Studio", "FilmId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
